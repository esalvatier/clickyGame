{"version":3,"sources":["components/Wrapper/index.js","components/Row/index.js","components/Col/index.js","components/Container/index.js","components/Object/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Row","Object","assign","concat","fluid","Col","size","split","map","join","Container","components_Col","components_Container","type","src","data","alt","onClick","handler","data-index","index","height","width","Header","score","highScore","App","state","objects","handleClick","event","preventDefault","id","target","dataset","_this","clicked","reset","increment","this","setState","shuffle","i","length","setValue","current","array","j","Math","floor","random","_ref","value","tempObjs","_this2","components_Wrapper","components_Row","components_Header","object","components_Object","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18925344.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return <div className={size} {...props} />;\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;\n","import React from \"react\";\r\nimport Col from \"../Col\";\r\nimport Container from \"../Container\";\r\n\r\nfunction Object(props) {\r\n  return (\r\n    <Col size=\"md-4\">\r\n      <Container>\r\n        <input type=\"image\" src={props.data.src} alt=\"\" onClick={props.handler} data-index={props.index} height=\"200px\" width=\"200px\"></input>\r\n      </Container>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default Object;","import React from \"react\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"page-header\">\r\n      <h1>Score: {props.score} / High Score: {props.highScore}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Row from \"./components/Row\";\nimport Object from \"./components/Object\";\nimport Header from \"./components/Header\";\nimport objects from \"./objects.json\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    objects: [],\n    score: 0,\n    highScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({objects: objects});\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    const id = event.target.dataset.index;\n    this.state.objects[id].clicked ? this.reset() : this.increment(id);\n  };\n\n  reset() {\n    this.setState({score: 0});\n    this.shuffle();\n    for (let i = 0; i < this.state.objects.length; i++) {\n      this.setValue(i, false);\n    }\n  };\n\n  increment(index) {\n    let current = this.state.score;\n    current += 1;\n    this.setState({score: current})\n    this.setValue(index, true)\n    this.shuffle();\n  };\n\n  shuffle() {\n    const array = this.state.objects;\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    this.setState({objects: array});\n    if (this.state.score >= this.state.highScore) {\n      this.setState({highScore: this.state.score});\n    } \n  };\n\n  setValue(index, value) {\n    const tempObjs = this.state.objects;\n    let changeObj = tempObjs[index];\n    changeObj.clicked = value;\n    this.setState({objects: tempObjs});\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Row>\n          <Header \n            score={this.state.score}\n            highScore={this.state.highScore}\n          />\n        </Row>\n        <Row>\n          {this.state.objects.map((object, i) => \n          <Object \n            data={object}\n            index={i}\n            handler={this.handleClick}\n          />)}\n        </Row>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}